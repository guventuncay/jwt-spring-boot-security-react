{"ast":null,"code":"var _jsxFileName = \"/home/guven/dev/projects/jwt-with-roles-react/jwt-with-roles-react/src/component/AdminPage.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AdminPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      admins: null\n    };\n  }\n\n  componentDidMount() {\n    let token = \"basaramadık\";\n\n    if (localStorage.getItem(\"login\") != null) {\n      token = \"Bearer \" + JSON.parse(localStorage.getItem(\"login\")).data;\n    } else {\n      console.log(\"not logged in\");\n    } //console.log(token);\n\n\n    fetch(\"http://localhost:8080/hello-admin\", {\n      method: \"get\",\n      headers: {\n        Authorization: token\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        res.json().then(json => {\n          this.setState({\n            admins: json\n          });\n        });\n      } else {\n        this.setState({\n          admins: \"Only admins can access this source.\"\n        });\n      }\n    }).catch(error => console.log(\"Error detected: \" + error));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Admin Page\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Admins :\", \" \", this.state.admins ? JSON.stringify(this.state.admins) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"nothing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/guven/dev/projects/jwt-with-roles-react/jwt-with-roles-react/src/component/AdminPage.jsx"],"names":["React","AdminPage","Component","state","admins","componentDidMount","token","localStorage","getItem","JSON","parse","data","console","log","fetch","method","headers","Authorization","then","res","status","json","setState","catch","error","render","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACrDC,KADqD,GAC7C;AACNC,MAAAA,MAAM,EAAE;AADF,KAD6C;AAAA;;AAKrDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,KAAK,GAAG,aAAZ;;AACA,QAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,IAArC,EAA2C;AACzCF,MAAAA,KAAK,GAAG,YAAYG,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,EAA0CG,IAA9D;AACD,KAFD,MAEO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,KANiB,CAOlB;;;AACAC,IAAAA,KAAK,CAAC,mCAAD,EAAsC;AACzCC,MAAAA,MAAM,EAAE,KADiC;AAEzCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEX;AADR;AAFgC,KAAtC,CAAL,CAMGY,IANH,CAMSC,GAAD,IAAS;AACb,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBD,QAAAA,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAiBG,IAAD,IAAU;AACxB,eAAKC,QAAL,CAAc;AAAElB,YAAAA,MAAM,EAAEiB;AAAV,WAAd;AACD,SAFD;AAGD,OAJD,MAIO;AACL,aAAKC,QAAL,CAAc;AAAElB,UAAAA,MAAM,EAAE;AAAV,SAAd;AACD;AACF,KAdH,EAeGmB,KAfH,CAeUC,KAAD,IAAWZ,OAAO,CAACC,GAAR,CAAY,qBAAqBW,KAAjC,CAfpB;AAgBD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,4CAEE;AAAA,+BACW,GADX,EAEG,KAAKtB,KAAL,CAAWC,MAAX,GACCK,IAAI,CAACiB,SAAL,CAAe,KAAKvB,KAAL,CAAWC,MAA1B,CADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA7CoD","sourcesContent":["import React from \"react\";\n\nexport default class AdminPage extends React.Component {\n  state = {\n    admins: null,\n  };\n\n  componentDidMount() {\n    let token = \"basaramadık\";\n    if (localStorage.getItem(\"login\") != null) {\n      token = \"Bearer \" + JSON.parse(localStorage.getItem(\"login\")).data;\n    } else {\n      console.log(\"not logged in\");\n    }\n    //console.log(token);\n    fetch(\"http://localhost:8080/hello-admin\", {\n      method: \"get\",\n      headers: {\n        Authorization: token,\n      },\n    })\n      .then((res) => {\n        if (res.status === 200) {\n          res.json().then((json) => {\n            this.setState({ admins: json });\n          });\n        } else {\n          this.setState({ admins: \"Only admins can access this source.\" });\n        }\n      })\n      .catch((error) => console.log(\"Error detected: \" + error));\n  }\n\n  render() {\n    return (\n      <div>\n        Admin Page\n        <div>\n          Admins :{\" \"}\n          {this.state.admins ? (\n            JSON.stringify(this.state.admins)\n          ) : (\n            <div>nothing</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}