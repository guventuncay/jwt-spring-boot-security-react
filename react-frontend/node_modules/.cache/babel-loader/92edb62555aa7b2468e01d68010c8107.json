{"ast":null,"code":"var _jsxFileName = \"/home/guven/dev/projects/jwt-with-roles-react/jwt-with-roles-react/src/component/Login.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: null,\n      password: null,\n      login: false,\n      data: null\n    };\n\n    this.login = () => {\n      fetch(\"http://localhost:8080/auth\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json, text/plain\",\n          \"Content-Type\": \"application/json;charset=UTF-8\"\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      }).then(res => {\n        res.json().then(res => {\n          console.log(\"result:\", res);\n          localStorage.setItem(\"login\", JSON.stringify({\n            login: true,\n            token: res.token\n          }));\n          this.setState({\n            login: true\n          });\n        });\n      }).catch(error => console.log(\"Error detected: \" + error));\n    };\n  }\n\n  componentDidMount() {\n    this.collectStore();\n  }\n\n  collectStore() {\n    let store = JSON.parse(localStorage.getItem(\"login\"));\n\n    if (store && store.login) {\n      this.setState({\n        login: true,\n        data: store\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !this.state.login ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => {\n            this.setState({\n              username: event.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), \"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => {\n            this.setState({\n              password: event.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.login,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: (() => localStorage.clear(), this.setState()),\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/guven/dev/projects/jwt-with-roles-react/jwt-with-roles-react/src/component/Login.jsx"],"names":["React","Login","Component","state","username","password","login","data","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","console","log","localStorage","setItem","token","setState","catch","error","componentDidMount","collectStore","store","parse","getItem","render","event","target","value","clear"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAAA;AAAA;AAAA,SACjDC,KADiD,GACzC;AACNC,MAAAA,QAAQ,EAAE,IADJ;AAENC,MAAAA,QAAQ,EAAE,IAFJ;AAGNC,MAAAA,KAAK,EAAE,KAHD;AAINC,MAAAA,IAAI,EAAE;AAJA,KADyC;;AAAA,SAkBjDD,KAlBiD,GAkBzC,MAAM;AACZE,MAAAA,KAAK,CAAC,4BAAD,EAA+B;AAClCC,QAAAA,MAAM,EAAE,MAD0B;AAElCC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE,8BADD;AAEP,0BAAgB;AAFT,SAFyB;AAMlCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBV,UAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QADF;AAEnBC,UAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAFF,SAAf;AAN4B,OAA/B,CAAL,CAWGU,IAXH,CAWSC,GAAD,IAAS;AACbA,QAAAA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAiBC,GAAD,IAAS;AACvBE,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,GAAvB;AACAI,UAAAA,YAAY,CAACC,OAAb,CACE,OADF,EAEER,IAAI,CAACC,SAAL,CAAe;AACbR,YAAAA,KAAK,EAAE,IADM;AAEbgB,YAAAA,KAAK,EAAEN,GAAG,CAACM;AAFE,WAAf,CAFF;AAOA,eAAKC,QAAL,CAAc;AAAEjB,YAAAA,KAAK,EAAE;AAAT,WAAd;AACD,SAVD;AAWD,OAvBH,EAwBGkB,KAxBH,CAwBUC,KAAD,IAAWP,OAAO,CAACC,GAAR,CAAY,qBAAqBM,KAAjC,CAxBpB;AAyBD,KA5CgD;AAAA;;AAQjDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,YAAL;AACD;;AACDA,EAAAA,YAAY,GAAG;AACb,QAAIC,KAAK,GAAGf,IAAI,CAACgB,KAAL,CAAWT,YAAY,CAACU,OAAb,CAAqB,OAArB,CAAX,CAAZ;;AACA,QAAIF,KAAK,IAAIA,KAAK,CAACtB,KAAnB,EAA0B;AACxB,WAAKiB,QAAL,CAAc;AAAEjB,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,IAAI,EAAEqB;AAArB,OAAd;AACD;AACF;;AA8BDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,gBACG,CAAC,KAAK5B,KAAL,CAAWG,KAAZ,gBACC;AAAA,6CAEE;AACE,UAAA,QAAQ,EAAG0B,KAAD,IAAW;AACnB,iBAAKT,QAAL,CAAc;AAAEnB,cAAAA,QAAQ,EAAE4B,KAAK,CAACC,MAAN,CAAaC;AAAzB,aAAd;AACD;AAHH;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AAAA;AAAA;AAAA;AAAA,gBARF,4BAUE;AACE,UAAA,QAAQ,EAAGF,KAAD,IAAW;AACnB,iBAAKT,QAAL,CAAc;AAAElB,cAAAA,QAAQ,EAAE2B,KAAK,CAACC,MAAN,CAAaC;AAAzB,aAAd;AACD;AAHH;AAAA;AAAA;AAAA;AAAA,gBAVF,eAeE;AAAA;AAAA;AAAA;AAAA,gBAfF,eAgBE;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAiBE;AAAQ,UAAA,OAAO,EAAE,KAAK5B,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAqBC;AAAA,+BACE;AAAQ,UAAA,OAAO,GAAE,MAAMc,YAAY,CAACe,KAAb,EAAN,EAA2B,KAAKZ,QAAL,EAA7B,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAtBJ;AAAA;AAAA;AAAA;AAAA,YADF;AA6BD;;AA5EgD","sourcesContent":["import React from \"react\";\n\nexport default class Login extends React.Component {\n  state = {\n    username: null,\n    password: null,\n    login: false,\n    data: null,\n  };\n\n  componentDidMount() {\n    this.collectStore();\n  }\n  collectStore() {\n    let store = JSON.parse(localStorage.getItem(\"login\"));\n    if (store && store.login) {\n      this.setState({ login: true, data: store });\n    }\n  }\n\n  login = () => {\n    fetch(\"http://localhost:8080/auth\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json, text/plain\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        password: this.state.password,\n      }),\n    })\n      .then((res) => {\n        res.json().then((res) => {\n          console.log(\"result:\", res);\n          localStorage.setItem(\n            \"login\",\n            JSON.stringify({\n              login: true,\n              token: res.token,\n            })\n          );\n          this.setState({ login: true });\n        });\n      })\n      .catch((error) => console.log(\"Error detected: \" + error));\n  };\n\n  render() {\n    return (\n      <div>\n        {!this.state.login ? (\n          <div>\n            Username:\n            <input\n              onChange={(event) => {\n                this.setState({ username: event.target.value });\n              }}\n            />\n            <br />\n            <br />\n            Password:\n            <input\n              onChange={(event) => {\n                this.setState({ password: event.target.value });\n              }}\n            />\n            <br />\n            <br />\n            <button onClick={this.login}>Login</button>\n          </div>\n        ) : (\n          <div>\n            <button onClick={() => localStorage.clear(),this.setState()}>Logout</button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}